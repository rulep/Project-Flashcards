{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thism\\\\Desktop\\\\Project-Flashcards\\\\src\\\\Layout\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckInfoCard from \"./DeckInfoCard\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    setDecks([]);\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        let _decks = await listDecks(abortController.signal);\n\n        setDecks(_decks);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDecks();\n    return () => {\n      console.log(\"aborting\");\n      abortController.abort();\n    };\n  }, []);\n\n  async function handleDeleteDeck(id) {\n    if (window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")) {\n      await deleteDeck(id);\n      setDecks(() => decks.filter(deck => deck.id !== id));\n    }\n  }\n\n  const rows = decks.map(deck => DeckInfoCard({ ...deck,\n    handleDeleteDeck\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/decks/new\",\n        className: \"btn btn-secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" Create Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-4\",\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/thism/Desktop/Project-Flashcards/src/Layout/Home.js"],"names":["React","useEffect","useState","Link","DeckInfoCard","listDecks","deleteDeck","Home","decks","setDecks","abortController","AbortController","loadDecks","_decks","signal","error","name","console","log","abort","handleDeleteDeck","id","window","confirm","filter","deck","rows","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,YAAIC,MAAM,GAAG,MAAMR,SAAS,CAACK,eAAe,CAACI,MAAjB,CAA5B;;AACAL,QAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAFD,MAEO;AACL,gBAAMH,KAAN;AACD;AACF;AACF;;AACDH,IAAAA,SAAS;AACT,WAAO,MAAM;AACXK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAR,MAAAA,eAAe,CAACS,KAAhB;AACD,KAHD;AAID,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,iBAAeC,gBAAf,CAAgCC,EAAhC,EAAoC;AAClC,QACEC,MAAM,CAACC,OAAP,CAAe,0DAAf,CADF,EAEE;AACA,YAAMjB,UAAU,CAACe,EAAD,CAAhB;AACAZ,MAAAA,QAAQ,CAAC,MAAMD,KAAK,CAACgB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAP,CAAR;AACD;AACF;;AAED,QAAMK,IAAI,GAAGlB,KAAK,CAACmB,GAAN,CAAWF,IAAD,IAAUrB,YAAY,CAAC,EAAE,GAAGqB,IAAL;AAAWL,IAAAA;AAAX,GAAD,CAAhC,CAAb;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BM;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GA7CQnB,I;;KAAAA,I;AA+CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckInfoCard from \"./DeckInfoCard\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\n\nfunction Home() {\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    setDecks([]);\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        let _decks = await listDecks(abortController.signal);\n        setDecks(_decks);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n    return () => {\n      console.log(\"aborting\");\n      abortController.abort();\n    };\n  }, []);\n\n  async function handleDeleteDeck(id) {\n    if (\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\n    ) {\n      await deleteDeck(id);\n      setDecks(() => decks.filter((deck) => deck.id !== id));\n    }\n  }\n\n  const rows = decks.map((deck) => DeckInfoCard({ ...deck, handleDeleteDeck }));\n  return (\n    <>\n      <div className='row'>\n        <Link to='/decks/new' className='btn btn-secondary'>\n          <i className='bi bi-plus-lg'></i> Create Deck\n        </Link>\n      </div>\n      <div className='row my-4'>{rows}</div>\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}