{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thism\\\\Desktop\\\\Project-Flashcards\\\\src\\\\Layout\\\\CardList.js\";\nimport React from \"react\";\nimport CardDetails from \"./CardDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardList({\n  deck,\n  deleteHandler\n}) {\n  var _deck$cards;\n\n  const rows = (_deck$cards = deck.cards) === null || _deck$cards === void 0 ? void 0 : _deck$cards.map(card => CardDetails({ ...card,\n    deckId: deck.id,\n    deleteHandler\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-4\",\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), rows]\n  }, void 0, true);\n}\n\n_c = CardList;\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["C:/Users/thism/Desktop/Project-Flashcards/src/Layout/CardList.js"],"names":["React","CardDetails","CardList","deck","deleteHandler","rows","cards","map","card","deckId","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAA2C;AAAA;;AACzC,QAAMC,IAAI,kBAAGF,IAAI,CAACG,KAAR,gDAAG,YAAYC,GAAZ,CAAiBC,IAAD,IAC3BP,WAAW,CAAC,EAAE,GAAGO,IAAL;AAAWC,IAAAA,MAAM,EAAEN,IAAI,CAACO,EAAxB;AAA4BN,IAAAA;AAA5B,GAAD,CADA,CAAb;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,IAFH;AAAA,kBADF;AAMD;;KAXQH,Q;AAaT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport CardDetails from \"./CardDetails\";\n\nfunction CardList({ deck, deleteHandler }) {\n  const rows = deck.cards?.map((card) =>\n    CardDetails({ ...card, deckId: deck.id, deleteHandler })\n  );\n\n  return (\n    <>\n      <h2 className='mt-4'>Cards</h2>\n      {rows}\n    </>\n  );\n}\n\nexport default CardList;\n"]},"metadata":{},"sourceType":"module"}