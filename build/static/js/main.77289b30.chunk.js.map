{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","Layout/DeckInfoCard.js","utils/api/index.js","Layout/Home.js","Layout/DeckForm.js","Layout/CreateDeck.js","Layout/CardDetails.js","Layout/CardList.js","Layout/DeckDetails.js","Layout/EditDeck.js","Layout/CardForm.js","Layout/AddCard.js","Layout/EditCard.js","Layout/FlashCard.js","utils/class-names/index.js","Layout/NotEnoughCards.js","Layout/StudyDeck.js","Layout/DeckRoutes.js","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","to","DeckInfoCard","name","description","id","cards","handleDeleteDeck","style","display","width","length","onClick","API_BASE_URL","process","headers","Headers","stripCards","deck","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","deleteDeck","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","Home","useState","decks","setDecks","window","confirm","filter","useEffect","abortController","AbortController","_decks","log","loadDecks","abort","rows","map","DeckForm","handleSubmit","handleCancel","deckInfo","setDeckInfo","updateForm","event","target","value","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","required","CreateDeck","history","useHistory","push","info","callCreateDeck","CardDetails","front","back","deleteHandler","flex","CardList","DeckDetails","useParams","useRouteMatch","getDeckDetails","EditDeck","setDeck","loadDeck","editDeck","CardForm","cardInfo","setCardInfo","AddCard","callCreateCard","setCard","loadCard","callUpdateCard","FlashCard","classNameToBoolean","handleNext","side","setSide","nextButton","Object","entries","reduce","classes","concat","undefined","join","NotEnoughCards","StudyDeck","setCardId","flashCards","Deck","path","exact","EditCard","Layout","DeckRoutes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77289b30.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className='jumbotron bg-dark'>\n      <div className='container text-white'>\n        <h1 className='display-4'>Flashcard-o-matic</h1>\n        <p className='lead'>Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div className='NotFound'>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Page Unavailable\n          </li>\n        </ol>\n      </nav>\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction DeckInfoCard({ name, description, id, cards, handleDeleteDeck }) {\n  return (\n    <div className='card my-1' key={id}>\n      <div className='card-body'>\n        <div className='deck-card-header' style={{\n  display: 'flex',\n  width: '100%',\n  'justify-content': 'space-between'\n}\n}>\n          <h5 className='card-title'>{name}</h5>\n          <p className='card-subtitle text-muted'>{cards.length} cards</p>\n        </div>\n        <p className='card-text'>{description}</p>\n        <div className='deck-card-buttons'>\n          <Link className='btn btn-secondary' to={`/decks/${id}`}>\n            <i className='bi bi-eye-fill'></i> View\n          </Link>\n          <Link className='btn btn-primary' to={`/decks/${id}/study`}>\n            <i className='bi bi-book'></i> Study\n          </Link>\n          <button\n            className='btn btn-danger delete-deck'\n            onClick={() => handleDeleteDeck(id)}\n          >\n            <i className='bi bi-trash'></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckInfoCard;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DeckInfoCard from \"./DeckInfoCard\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\n\nfunction Home() {\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    setDecks([]);\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        let _decks = await listDecks(abortController.signal);\n        setDecks(_decks);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n    return () => {\n      console.log(\"aborting\");\n      abortController.abort();\n    };\n  }, []);\n\n  async function handleDeleteDeck(id) {\n    if (\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\n    ) {\n      await deleteDeck(id);\n      setDecks(() => decks.filter((deck) => deck.id !== id));\n    }\n  }\n\n  const rows = decks.map((deck) => DeckInfoCard({ ...deck, handleDeleteDeck }));\n  return (\n    <>\n      <div className='row'>\n        <Link to='/decks/new' className='btn btn-secondary'>\n          <i className='bi bi-plus-lg'></i> Create Deck\n        </Link>\n      </div>\n      <div className='row my-4'>{rows}</div>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\n\nfunction DeckForm({ handleSubmit, handleCancel, deck }) {\n  const [deckInfo, setDeckInfo] = useState(deck);\n  useEffect(() => {\n    setDeckInfo(deck);\n  }, [deck]);\n  const updateForm = (event) => {\n    const { name, value } = event.target;\n    setDeckInfo({ ...deckInfo, [name]: value });\n  };\n  const submit = (event) => {\n    event.preventDefault();\n    handleSubmit(deckInfo);\n  };\n  return (\n    <form onSubmit={submit}>\n      <div className='form-group'>\n        <label htmlFor='name'>Name</label>\n        <input\n          className='form-control'\n          type='text'\n          id='name'\n          name='name'\n          placeholder='Deck Name'\n          value={deckInfo?.name || \"\"}\n          onChange={updateForm}\n          required\n        ></input>\n      </div>\n      <div className='form-group'>\n        <label htmlFor='description'>Description</label>\n        <textarea\n          className='form-control'\n          name='description'\n          id='description'\n          placeholder='Brief description of the deck'\n          value={deckInfo?.description || \"\"}\n          onChange={updateForm}\n          required\n        ></textarea>\n        <button className='btn btn-secondary my-2' onClick={handleCancel}>\n          Cancel\n        </button>\n        <button type='submit' className='btn btn-primary my-2'>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default DeckForm;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { createDeck } from \"../utils/api/index\";\n\nfunction CreateDeck() {\n  const history = useHistory();\n  function handleSubmit(deck) {\n    const abortController = new AbortController();\n\n\n    async function callCreateDeck() {\n      try {\n        const deckInfo = await createDeck(deck, abortController.signal);\n        history.push(`/decks/${deckInfo.id}`);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.info(\"aborted\");\n        } else {\n          throw err;\n        }\n      }\n    }\n    callCreateDeck();\n\n    return () => {\n      abortController.abort();\n    };\n  }\n  function handleCancel() {\n    history.push(\"/\");\n  }\n\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              {\n                //TODO: Change links to history.push, so we don't need to re-render??\n              }\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <h1>Create Deck</h1>\n      <DeckForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n    </div>\n  );\n}\n\nexport default CreateDeck;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction CardDetails({ id, front, back, deckId, deleteHandler }) {\n  return (\n    <div className='card my-1' key={id}>\n      <div className='card-body'>\n        <div className='card-content' style={{display:'flex'}}>\n          <p className='card-text mx-2' style={{flex:1}}>{front}</p>\n          <p className='card-text mx-2'style={{flex:1}}>{back}</p>\n        </div>\n        <div className='card-buttons'>\n          <Link\n            className='btn btn-secondary'\n            to={`/decks/${deckId}/cards/${id}/edit`}\n          >\n            <i className='bi bi-pencil-fill'></i> Edit\n          </Link>\n          <button style={{display: 'flex',\n  'justify-content': 'flex-end'}}\n            className='btn btn-danger delete-deck'\n            onClick={() => deleteHandler(id)}\n          >\n            <i className='bi bi-trash'></i>\n            \n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CardDetails;\n","import React from \"react\";\nimport CardDetails from \"./CardDetails\";\n\nfunction CardList({ deck, deleteHandler }) {\n  const rows = deck.cards?.map((card) =>\n    CardDetails({ ...card, deckId: deck.id, deleteHandler })\n  );\n\n  return (\n    <>\n      <h2 className='mt-4'>Cards</h2>\n      {rows}\n    </>\n  );\n}\n\nexport default CardList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteDeck, deleteCard } from \"../utils/api\";\nimport NotFound from \"./NotFound\";\nimport CardList from \"./CardList\";\n\nfunction DeckDetails() {\n  const [deckInfo, setDeckInfo] = useState({});\n  const { deckId } = useParams();\n  const { name, description } = deckInfo;\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  async function getDeckDetails() {\n    try {\n      const deck = await readDeck(deckId);\n      setDeckInfo(deck);\n    } catch (error) {\n      setDeckInfo({ name: \"Not Found\" });\n    }\n  }\n  useEffect(() => {\n    getDeckDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deckId]);\n\n  async function deleteHandler(id) {\n    if (\n      window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\")\n    ) {\n      await deleteCard(id);\n      getDeckDetails();\n    }\n  }\n\n  //Handle incorrect deckId\n  if (name === \"Not Found\") return <NotFound />;\n\n  async function handleDeleteDeck() {\n    if (\n      window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\")\n    ) {\n      await deleteDeck(deckId);\n      history.push(\"/\");\n    }\n  }\n\n  //TODO: Skeleton animation\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            {name}\n          </li>\n        </ol>\n      </nav>\n      <h3>{name}</h3>\n      <p>{description}</p>\n      <div className='deck-card-buttons'>\n        <Link className='btn btn-secondary' to={`${url}/edit`}>\n          <i className='bi bi-pencil-fill'></i> Edit\n        </Link>\n        <Link className='btn btn-primary' to={`${url}/study`}>\n          <i className='bi bi-book'></i> Study\n        </Link>\n        <Link className='btn btn-primary' to={`${url}/cards/new`}>\n          <i className='bi bi-plus-lg'></i> Add Cards\n        </Link>\n        <button\n          className='btn btn-danger delete-deck'\n          onClick={handleDeleteDeck}\n        >\n          <i className='bi bi-trash'></i>\n        </button>\n      </div>\n\n      <CardList deck={deckInfo} deleteHandler={deleteHandler} />\n    </div>\n  );\n}\n\nexport default DeckDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\n\nfunction EditDeck() {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({});\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        setDeck(deckInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  function handleSubmit(deck) {\n    const abortController = new AbortController();\n\n    async function editDeck() {\n      try {\n        const deckInfo = await updateDeck(deck, abortController.signal);\n        history.push(`/decks/${deckInfo.id}`);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.info(\"aborted\");\n        } else {\n          throw err;\n        }\n      }\n    }\n    editDeck();\n\n    return () => {\n      abortController.abort();\n    };\n  }\n  function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              {\n                //TODO: Change links to history.push, so we don't need to re-render??\n              }\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item'>\n            <Link to={`/decks/${deckId}`}>\n              {\n                //TODO: Change links to history.push, so we don't need to re-render??\n              }\n              {deck.name}\n            </Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h1>Edit Deck</h1>\n      <DeckForm\n        handleSubmit={handleSubmit}\n        handleCancel={handleCancel}\n        deck={deck}\n      />\n    </div>\n  );\n}\n\nexport default EditDeck;\n","import React, { useEffect, useState } from \"react\";\n\nfunction CardForm({ handleSubmit, handleCancel, card }) {\n  const [cardInfo, setCardInfo] = useState(card);\n  useEffect(() => {\n    setCardInfo(card);\n  }, [card]);\n  const updateForm = (event) => {\n    const { name, value } = event.target;\n    setCardInfo({ ...cardInfo, [name]: value });\n  };\n  const submit = (event) => {\n    event.preventDefault();\n    handleSubmit(cardInfo);\n    setCardInfo({});\n  };\n  return (\n    <form onSubmit={submit}>\n      <div className='form-group'>\n        <label htmlFor='front'>Front</label>\n        <textarea\n          className='form-control'\n          type='text'\n          id='front'\n          name='front'\n          placeholder='Front side of card'\n          value={cardInfo?.front || \"\"}\n          onChange={updateForm}\n          required\n        ></textarea>\n      </div>\n      <div className='form-group'>\n        <label htmlFor='back'>Back</label>\n        <textarea\n          className='form-control'\n          name='back'\n          id='back'\n          placeholder='Back side of card'\n          value={cardInfo?.back || \"\"}\n          onChange={updateForm}\n          required\n        ></textarea>\n        <button className='btn btn-secondary my-2' onClick={handleCancel}>\n          Done\n        </button>\n        <button type='submit' className='btn btn-primary my-2'>\n          Save\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default CardForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { createCard, readDeck } from \"../utils/api/index\";\n\nfunction AddCard() {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({});\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        setDeck(deckInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  function handleSubmit(card) {\n    const abortController = new AbortController();\n\n    async function callCreateCard() {\n      try {\n        await createCard(deckId, card, abortController.signal);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.info(\"aborted\");\n        } else {\n          throw err;\n        }\n      }\n    }\n    callCreateCard();\n\n    return () => {\n      abortController.abort();\n    };\n  }\n  function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item'>\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Add Card\n          </li>\n        </ol>\n      </nav>\n      <h1>{deck.name}: Add Card</h1>\n      <CardForm handleSubmit={handleSubmit} handleCancel={handleCancel} />\n    </div>\n  );\n}\n\nexport default AddCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { readCard, readDeck, updateCard } from \"../utils/api/index\";\n\nfunction CreateDeck() {\n  const history = useHistory();\n  const { deckId, cardId } = useParams();\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({});\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        setDeck(deckInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    async function loadCard() {\n      try {\n        const cardInfo = await readCard(cardId, abortController.signal);\n        setCard(cardInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n    loadCard();\n\n    return () => abortController.abort();\n  }, [deckId, cardId]);\n\n  function handleSubmit(card) {\n    const abortController = new AbortController();\n\n    async function callUpdateCard() {\n      try {\n        await updateCard(card, abortController.signal);\n        history.push(`/decks/${deckId}`);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.info(\"aborted\");\n        } else {\n          throw err;\n        }\n      }\n    }\n    callUpdateCard();\n\n    return () => {\n      abortController.abort();\n    };\n  }\n  function handleCancel() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item'>\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Edit Card {cardId}\n          </li>\n        </ol>\n      </nav>\n      <h1>{deck.name}: Add Card</h1>\n      <CardForm\n        handleSubmit={handleSubmit}\n        handleCancel={handleCancel}\n        card={card}\n      />\n    </div>\n  );\n}\n\nexport default CreateDeck;\n","import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\n// import \"./flash-card.css\";\n\nfunction FlashCard({ handleNext, deck = { cards: [] }, cardId = 0 }) {\n  const { cards } = deck;\n  const card = cards[cardId] || {};\n  const [side, setSide] = useState(true);\n\n  function flipCard() {\n    setSide(!side);\n  }\n\n  const nextButton = !side ? (\n    <button\n      className='btn btn-primary btn-next'\n      onClick={() => {\n        setSide(true);\n        handleNext();\n      }}\n    >\n      Next\n    </button>\n  ) : (\n    \"\"\n  );\n  return (\n    <div className='card my-1 front'>\n      <div\n        className={classNames({ \"card-body\": true, front: side, back: !side })}\n      >\n        <h5 className='card-title'>\n          Card {cardId + 1} of {cards.length}\n        </h5>\n        <p className='card-text front-text'>{card.front}</p>\n        <p className='card-text back-text'>{card.back}</p>\n        <button className='btn btn-secondary' onClick={flipCard}>\n          Flip\n        </button>\n        {nextButton}\n      </div>\n    </div>\n  );\n}\n\nexport default FlashCard;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotEnoughCards({ deck }) {\n  return (\n    <>\n      <h3>Not enough cards.</h3>\n      <p>\n        You need at least 3 cards to study. There are {deck?.cards?.length}{\" \"}\n        cards in this deck.\n      </p>\n      <Link className='btn btn-primary' to={`/decks/${deck?.id}/cards/new`}>\n        <i className='bi bi-plus-lg'></i> Add Cards\n      </Link>\n    </>\n  );\n}\n\nexport default NotEnoughCards;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport FlashCard from \"./FlashCard\";\nimport { readDeck } from \"../utils/api/index\";\nimport NotEnoughCards from \"./NotEnoughCards\";\n\nfunction StudyDeck() {\n  const history = useHistory();\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({ cards: [] });\n  const [cardId, setCardId] = useState(0);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        setDeck(deckInfo);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  function handleNext() {\n    //TODO: handle clicking next\n    if (cardId >= deck.cards.length - 1) {\n      if (window.confirm(\"Restart cards?\")) {\n        setCardId(0);\n      } else {\n        history.push(\"/\");\n      }\n    } else {\n      setCardId(cardId + 1);\n    }\n  }\n\n  const flashCards =\n    deck?.cards?.length > 2 ? (\n      <FlashCard handleNext={handleNext} deck={deck} cardId={cardId} />\n    ) : (\n      <NotEnoughCards deck={deck} />\n    );\n\n  return (\n    <div>\n      <nav aria-label='breadcrumb'>\n        <ol className='breadcrumb'>\n          <li className='breadcrumb-item'>\n            <Link to='/'>\n              <i className='bi bi-house-door-fill'></i> Home\n            </Link>\n          </li>\n          <li className='breadcrumb-item'>\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className='breadcrumb-item active' aria-current='page'>\n            Study\n          </li>\n        </ol>\n      </nav>\n      <h1>{deck.name}: Study</h1>\n      {flashCards}\n    </div>\n  );\n}\n\nexport default StudyDeck;\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport DeckDetails from \"./DeckDetails\";\nimport EditDeck from \"./EditDeck\";\nimport AddCard from \"./AddCard\";\nimport EditCard from \"./EditCard\";\nimport StudyDeck from \"./StudyDeck\";\n\nfunction Deck() {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={\"/decks/:deckId\"} exact={true}>\n        <DeckDetails />\n      </Route>\n      <Route path={\"/decks/:deckId/study\"} exact={true}>\n        <StudyDeck />\n      </Route>\n      <Route path={\"/decks/:deckId/edit\"} exact={true}>\n        <EditDeck />\n      </Route>\n      <Route path={\"/decks/:deckId/cards/new\"} exact={true}>\n        <AddCard />\n      </Route>\n      <Route path={\"/decks/:deckId/cards/:cardId/edit\"}>\n        <EditCard />\n      </Route>\n      {\n        //This will cover any undefined routes\n      }\n      <Route path={url}>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Deck;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport DeckRoutes from \"./DeckRoutes\";\nimport { Switch, Route } from \"react-router-dom\";\n// import \"./index.css\";\n\nfunction Layout() {\n  return (\n    <>\n      <Header />\n      <div className='container'>\n        <Switch>\n          <Route exact={true} path='/'>\n            <Home />\n          </Route>\n          <Route exact={true} path='/decks/new'>\n            <CreateDeck />\n          </Route>\n          <Route path='/decks/:deckId'>\n            <DeckRoutes />\n          </Route>\n          <Route path='/'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}